@model Vidly.ViewModels.MovieFormViewModel
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Save", "Movies"))
{
	@Html.ValidationSummary(true, "Please validate the following errors.")
	<div class="form-group">
		@Html.LabelFor(m => m.Name)
		@Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.Name)
	</div>
	<div class="form-group">
		@Html.LabelFor(m => m.ReleaseDate)
		@Html.TextBoxFor(m => m.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.ReleaseDate)
	</div>
	<div class="form-group">
		@Html.LabelFor(m => m.GenreId) @*At first when I loaded the Edit view, the movie's genre wasn't populating in the dropdwon. Then it was erroring out when I went to save. That's because this was previously m.Genres. THAT WAS INCORRECT. I needed to add "pulbic byte GenreId" prop to Movie.cs which acts as a foreign key to Genres table. Before, when I was jsut referencing m => m.Genres, that was a property of the VIEWMODEL (a list, specifically) and not the movie entity that was passed INTO the viewModel in via the Edit method*@
		@Html.DropDownListFor(m => m.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Select Genre", new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.GenreId)
	</div>
	<div class="form-group">
		@Html.LabelFor(m => m.NumberInStock)
		@Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.NumberInStock)
	</div>
	@Html.HiddenFor(m => m.Id)
	@Html.AntiForgeryToken();
	<button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
	@Scripts.Render("~/bundles/jqueryval")
}