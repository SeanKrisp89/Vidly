@model IEnumerable<Vidly.Models.Customer>
@{
	ViewBag.Title = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>
@Html.ActionLink("Add Customer", "New", "Customers", null, new { @class = "btn btn-success", @style = "margin-bottom: 1%;" })
@if (!Model.Any())
{
	<p>We currently do not have any customers.</p>
}
else
{
	<table id="customers" class="table table-bordered table-hover">
		<thead>
			<tr>
				<th>Customer</th>
				<th>Discount Rate</th>
				<th>Delete</th>
			</tr>
		</thead>
		<tbody>
			@foreach(var customer in Model)
				{
					<tr>
						<td>@Html.ActionLink(customer.Name, "Edit", "Customers", new { id = customer.Id }, null)</td>
						<td>@customer.MembershipType.Name</td>
						<td>
							<button class="btn btn-link js-delete" data-customer-id="@customer.Id">Delete</button> @*Don't forget you need to add the data-customer-id attribute in order to snag the id and pass it into the url property of the ajax object*@
						</td>
					</tr>
				}
		</tbody>
	</table>
}

@section scripts

{
	<script>
		$(document).ready(function () {
			/*The way we're currently handling the click event of our buttons is inefficient. If we have 20 customers, we're going to have a delete button,
			 * and for each delete button/event, we're going to have a separate handler function in the memory. So what we can do is
			 * apply a selector to only the customers table, then provide a filter as a second argument to the "on" method */
			$("#customers").on("click", " .js-delete", function () { //select the table and find all elements within that have js-delete class. Then run this callback func on click event
				var button = $(this);
				if (bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
					if (result) { //if true, make an ajax call
						$.ajax({
							url: "/api/customers/" + button.attr("data-customer-id"), //set the url property of the ajax call.
							method: "DELETE",
							success: function () { //our callback function for when the call is successful
								button.parents("tr").remove();
							}
						});
					}
				}));
			});
		});
	</script>
	
}